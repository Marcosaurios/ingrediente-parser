{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../../ingredientes-parser.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// Generated by Peggy 1.2.0.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length);\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1)\n          + peg$padEnd(\"\", last - s.column, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \"gramos\";\n  var peg$c1 = \"gramo\";\n  var peg$c2 = \"gr.\";\n  var peg$c3 = \"gr\";\n  var peg$c4 = \"g.\";\n  var peg$c5 = \"g\";\n  var peg$c6 = \"kilogramos\";\n  var peg$c7 = \"kilogramo\";\n  var peg$c8 = \"kg.\";\n  var peg$c9 = \"kg\";\n  var peg$c10 = \"litros\";\n  var peg$c11 = \"litro\";\n  var peg$c12 = \"l.\";\n  var peg$c13 = \"l\";\n  var peg$c14 = \"miligramos\";\n  var peg$c15 = \"miligramo\";\n  var peg$c16 = \"mg.\";\n  var peg$c17 = \"mg\";\n  var peg$c18 = \"mililitros\";\n  var peg$c19 = \"mililitro\";\n  var peg$c20 = \"ml.\";\n  var peg$c21 = \"ml\";\n  var peg$c22 = \"de\";\n  var peg$c23 = \" \";\n  var peg$c24 = \"docenas\";\n  var peg$c25 = \"docena\";\n  var peg$c26 = \"pu\\xF1aditos\";\n  var peg$c27 = \"pu\\xF1adito\";\n  var peg$c28 = \"pu\\xF1ado\";\n  var peg$c29 = \"vasos\";\n  var peg$c30 = \"vaso\";\n  var peg$c31 = \"vasitos\";\n  var peg$c32 = \"vasito\";\n  var peg$c33 = \"cucharitas\";\n  var peg$c34 = \"cucharita\";\n  var peg$c35 = \"cucharadas\";\n  var peg$c36 = \"cucharada\";\n  var peg$c37 = \"cucharaditas\";\n  var peg$c38 = \"cucharadita\";\n\n  var peg$r0 = /^[.]/;\n  var peg$r1 = /^[\\/]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[A-z\\xC0-\\xFA]/i;\n  var peg$r4 = /^[\\t]/;\n\n  var peg$e0 = peg$otherExpectation(\"cantidad\");\n  var peg$e1 = peg$otherExpectation(\"medida\");\n  var peg$e2 = peg$otherExpectation(\"numero de cantidad\");\n  var peg$e3 = peg$otherExpectation(\"decimal\");\n  var peg$e4 = peg$classExpectation([\".\"], false, false);\n  var peg$e5 = peg$otherExpectation(\"fraccion\");\n  var peg$e6 = peg$classExpectation([\"/\"], false, false);\n  var peg$e7 = peg$otherExpectation(\"entero\");\n  var peg$e8 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e9 = peg$otherExpectation(\"unidades\");\n  var peg$e10 = peg$otherExpectation(\"gramos\");\n  var peg$e11 = peg$literalExpectation(\"gramos\", true);\n  var peg$e12 = peg$literalExpectation(\"gramo\", true);\n  var peg$e13 = peg$literalExpectation(\"gr.\", true);\n  var peg$e14 = peg$literalExpectation(\"gr\", true);\n  var peg$e15 = peg$literalExpectation(\"g.\", true);\n  var peg$e16 = peg$literalExpectation(\"g\", true);\n  var peg$e17 = peg$otherExpectation(\"kilogramo\");\n  var peg$e18 = peg$literalExpectation(\"kilogramos\", true);\n  var peg$e19 = peg$literalExpectation(\"kilogramo\", true);\n  var peg$e20 = peg$literalExpectation(\"kg.\", true);\n  var peg$e21 = peg$literalExpectation(\"kg\", true);\n  var peg$e22 = peg$otherExpectation(\"litro\");\n  var peg$e23 = peg$literalExpectation(\"litros\", true);\n  var peg$e24 = peg$literalExpectation(\"litro\", true);\n  var peg$e25 = peg$literalExpectation(\"l.\", true);\n  var peg$e26 = peg$literalExpectation(\"l\", true);\n  var peg$e27 = peg$otherExpectation(\"miligramo\");\n  var peg$e28 = peg$literalExpectation(\"miligramos\", true);\n  var peg$e29 = peg$literalExpectation(\"miligramo\", true);\n  var peg$e30 = peg$literalExpectation(\"mg.\", true);\n  var peg$e31 = peg$literalExpectation(\"mg\", true);\n  var peg$e32 = peg$otherExpectation(\"mililitro\");\n  var peg$e33 = peg$literalExpectation(\"mililitros\", true);\n  var peg$e34 = peg$literalExpectation(\"mililitro\", true);\n  var peg$e35 = peg$literalExpectation(\"ml.\", true);\n  var peg$e36 = peg$literalExpectation(\"ml\", true);\n  var peg$e37 = peg$otherExpectation(\"frase\");\n  var peg$e38 = peg$otherExpectation(\"ingrediente\");\n  var peg$e39 = peg$otherExpectation(\"palabra\");\n  var peg$e40 = peg$classExpectation([[\"A\", \"z\"], [\"\\xC0\", \"\\xFA\"]], false, true);\n  var peg$e41 = peg$otherExpectation(\"preposiciones\");\n  var peg$e42 = peg$literalExpectation(\"de\", false);\n  var peg$e43 = peg$otherExpectation(\"separadores\");\n  var peg$e44 = peg$literalExpectation(\" \", false);\n  var peg$e45 = peg$classExpectation([\"\\t\"], false, false);\n  var peg$e46 = peg$otherExpectation(\"otras medidas\");\n  var peg$e47 = peg$literalExpectation(\"docenas\", true);\n  var peg$e48 = peg$literalExpectation(\"docena\", true);\n  var peg$e49 = peg$literalExpectation(\"pu\\xF1aditos\", true);\n  var peg$e50 = peg$literalExpectation(\"pu\\xF1adito\", true);\n  var peg$e51 = peg$literalExpectation(\"pu\\xF1ado\", true);\n  var peg$e52 = peg$otherExpectation(\"recipientes\");\n  var peg$e53 = peg$literalExpectation(\"vasos\", false);\n  var peg$e54 = peg$literalExpectation(\"vaso\", false);\n  var peg$e55 = peg$literalExpectation(\"vasitos\", false);\n  var peg$e56 = peg$literalExpectation(\"vasito\", false);\n  var peg$e57 = peg$literalExpectation(\"cucharitas\", false);\n  var peg$e58 = peg$literalExpectation(\"cucharita\", false);\n  var peg$e59 = peg$literalExpectation(\"cucharadas\", false);\n  var peg$e60 = peg$literalExpectation(\"cucharada\", false);\n  var peg$e61 = peg$literalExpectation(\"cucharaditas\", false);\n  var peg$e62 = peg$literalExpectation(\"cucharadita\", false);\n\n  var peg$f0 = function(amount, ingredient) {\n      return {\n        amount: amount,\n        ingredient: ingredient\n      }\n    };\n  var peg$f1 = function(amount, ws, type) {\n     if (!type) return amount\n     if (!ws) return `${amount}${type}`\n\n     return `${amount} ${type}`\n   };\n  var peg$f2 = function(t) {return t};\n  var peg$f3 = function(digits) { return digits.join(''); };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parseread_ingredients();\n\n    return s0;\n  }\n\n  function peg$parseread_ingredients() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseamount();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = [];\n    s3 = peg$parse_();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseingredient();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parse_();\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parsephrase();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseamount() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsebasic_amount();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseprepositions();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parse_();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parsemeasurament();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1(s1, s2, s5);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemeasurament() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseamount_types();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsecontainer_types();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseunits();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseprepositions();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f2(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsebasic_amount() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parsefraction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseinteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefloat() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseinteger();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parseinteger();\n      if (s4 !== peg$FAILED) {\n        s2 = [s2, s3, s4];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefraction() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseinteger();\n    if (s2 !== peg$FAILED) {\n      if (peg$r1.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e6); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseinteger();\n        if (s4 !== peg$FAILED) {\n          s2 = [s2, s3, s4];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e8); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f3(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseunits() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parsekilogram();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsegram();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseliter();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsemilligram();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsemilliliter();\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsegram() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c0) {\n      s0 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c1) {\n        s0 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e12); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c2) {\n          s0 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e13); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2).toLowerCase() === peg$c3) {\n            s0 = input.substr(peg$currPos, 2);\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e14); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c4) {\n              s0 = input.substr(peg$currPos, 2);\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e15); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 1).toLowerCase() === peg$c5) {\n                s0 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e16); }\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsekilogram() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 10).toLowerCase() === peg$c6) {\n      s0 = input.substr(peg$currPos, 10);\n      peg$currPos += 10;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e18); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c7) {\n        s0 = input.substr(peg$currPos, 9);\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e19); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c8) {\n          s0 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e20); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2).toLowerCase() === peg$c9) {\n            s0 = input.substr(peg$currPos, 2);\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e21); }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e17); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseliter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c10) {\n      s0 = input.substr(peg$currPos, 6);\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c11) {\n        s0 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e24); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2).toLowerCase() === peg$c12) {\n          s0 = input.substr(peg$currPos, 2);\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e25); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 1).toLowerCase() === peg$c13) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e26); }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e22); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemilligram() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 10).toLowerCase() === peg$c14) {\n      s0 = input.substr(peg$currPos, 10);\n      peg$currPos += 10;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e28); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c15) {\n        s0 = input.substr(peg$currPos, 9);\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e29); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c16) {\n          s0 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e30); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2).toLowerCase() === peg$c17) {\n            s0 = input.substr(peg$currPos, 2);\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e31); }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemilliliter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 10).toLowerCase() === peg$c18) {\n      s0 = input.substr(peg$currPos, 10);\n      peg$currPos += 10;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c19) {\n        s0 = input.substr(peg$currPos, 9);\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e34); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c20) {\n          s0 = input.substr(peg$currPos, 3);\n          peg$currPos += 3;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e35); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2).toLowerCase() === peg$c21) {\n            s0 = input.substr(peg$currPos, 2);\n            peg$currPos += 2;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e36); }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e32); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsephrase() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseword();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$currPos;\n      s6 = peg$parse_();\n      if (s6 !== peg$FAILED) {\n        s7 = peg$parseword();\n        if (s7 !== peg$FAILED) {\n          s6 = [s6, s7];\n          s5 = s6;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$currPos;\n        s6 = peg$parse_();\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parseword();\n          if (s7 !== peg$FAILED) {\n            s6 = [s6, s7];\n            s5 = s6;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n      }\n      s3 = [s3, s4];\n      s2 = s3;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseword();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseword();\n            if (s7 !== peg$FAILED) {\n              s6 = [s6, s7];\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseword();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseingredient() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseword();\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e38); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseword() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e40); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$r3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e40); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseprepositions() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c22) {\n      s0 = peg$c22;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e42); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s0 = peg$c23;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e44); }\n    }\n    if (s0 === peg$FAILED) {\n      if (peg$r4.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e45); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseamount_types() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c24) {\n      s0 = input.substr(peg$currPos, 7);\n      peg$currPos += 7;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e47); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c25) {\n        s0 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e48); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c26) {\n          s0 = input.substr(peg$currPos, 9);\n          peg$currPos += 9;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e49); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 8).toLowerCase() === peg$c27) {\n            s0 = input.substr(peg$currPos, 8);\n            peg$currPos += 8;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e50); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c28) {\n              s0 = input.substr(peg$currPos, 6);\n              peg$currPos += 6;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e51); }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e46); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecontainer_types() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 5) === peg$c29) {\n      s0 = peg$c29;\n      peg$currPos += 5;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e53); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c30) {\n        s0 = peg$c30;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e54); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c31) {\n          s0 = peg$c31;\n          peg$currPos += 7;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e55); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c32) {\n            s0 = peg$c32;\n            peg$currPos += 6;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e56); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 10) === peg$c33) {\n              s0 = peg$c33;\n              peg$currPos += 10;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e57); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 9) === peg$c34) {\n                s0 = peg$c34;\n                peg$currPos += 9;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e58); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 10) === peg$c35) {\n                  s0 = peg$c35;\n                  peg$currPos += 10;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$e59); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 9) === peg$c36) {\n                    s0 = peg$c36;\n                    peg$currPos += 9;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$e60); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 12) === peg$c37) {\n                      s0 = peg$c37;\n                      peg$currPos += 12;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$e61); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 11) === peg$c38) {\n                        s0 = peg$c38;\n                        peg$currPos += 11;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$e62); }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e52); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n  peg$parse as parse\n};\n","<script>\n    import { onMount } from \"svelte\";\n\n    import * as parser from \"../../ingredientes-parser\";\n\n    export let search = \"20gr de arroz\";\n    export let parsed = {};\n\n    // todo debounce it\n    function handleInput() {\n        parsed = parser.parse(search);\n    }\n\n    onMount(() => {\n        handleInput();\n    });\n</script>\n\n<main>\n    <h2>Ingrediente-parser</h2>\n    <p>Introduce un ingrediente para saber sus detalles</p>\n\n    <input type=\"text\" bind:value={search} on:input={handleInput} />\n\n    <div class=\"result\">\n        <div class=\"result__amount\">\n            Cantidad: <span class=\"bold\">{parsed.amount}</span>\n        </div>\n        <div class=\"result__ingredient\">\n            Ingrediente: <span class=\"bold\">{parsed.ingredient}</span>\n        </div>\n    </div>\n</main>\n\n<style>\n    main {\n        text-align: center;\n        padding: 1em;\n        max-width: 240px;\n        margin: 0 auto;\n    }\n\n    h2 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n    }\n\n    p {\n        font-style: italic;\n        color: dimgray;\n    }\n\n    .result {\n        background-color: rgba(30, 143, 255, 0.404);\n        display: flex;\n        flex-direction: column;\n        width: 50%;\n        margin: 0 auto;\n        padding: 1em;\n        border-radius: 10px;\n    }\n\n    .bold {\n        font-weight: 600;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tsearch: '20gr de arroz'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","anchor","customElement","m","new_on_destroy","map","filter","mount_component","peg$SyntaxError","message","expected","found","location","self","call","this","setPrototypeOf","prototype","peg$padEnd","str","targetLength","padString","repeat","slice","peg$parse","peg$result","peg$FAILED","peg$source","undefined","grammarSource","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c6","peg$c7","peg$c10","peg$c11","peg$c14","peg$c15","peg$c18","peg$c19","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$e0","peg$otherExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$classExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$literalExpectation","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","type","parts","inverted","description","peg$computePosDetails","pos","details","charCodeAt","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","source","offset","end","peg$fail","s0","s1","s2","s3","s4","s5","peg$parseinteger","test","charAt","substring","peg$parsefraction","peg$parsefloat","peg$parsebasic_amount","peg$parse_","peg$parseprepositions","substr","toLowerCase","peg$parseamount_types","peg$parsecontainer_types","peg$parsekilogram","peg$parsegram","peg$parseliter","peg$parsemilligram","peg$parsemilliliter","peg$parseunits","peg$parsemeasurament","amount","ws","peg$parseamount","peg$parseword","peg$parseingredient","s6","s7","peg$parsephrase","ingredient","peg$parseread_ingredients","join","buildMessage","insertBefore","insert","search","parsed","handleInput","parser.parse","child","parent","C","constructor","peg$subclass","format","sources","k","src","split","s","loc","e","filler","toString","last","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","part","isArray","classEscape","any","other","hex","ch","toUpperCase","replace","describeExpectation","j","descriptions","sort","describeExpected","describeFound","$destroy","detaching","d","destroy_component","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","body"],"mappings":"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"}